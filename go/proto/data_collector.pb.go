// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: proto/data_collector.proto

package proto_tick_data_collector

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_collector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_collector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_proto_data_collector_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloResponse) Reset() {
	*x = HelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_collector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloResponse) ProtoMessage() {}

func (x *HelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_collector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloResponse.ProtoReflect.Descriptor instead.
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return file_proto_data_collector_proto_rawDescGZIP(), []int{1}
}

func (x *HelloResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type TickData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instrument            string  `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	StrikePrice           int32   `protobuf:"varint,2,opt,name=strike_price,json=strikePrice,proto3" json:"strike_price,omitempty"`
	IsCallOption          bool    `protobuf:"varint,3,opt,name=is_call_option,json=isCallOption,proto3" json:"is_call_option,omitempty"`
	Ignore                string  `protobuf:"bytes,100,opt,name=ignore,proto3" json:"ignore,omitempty"`
	Token                 string  `protobuf:"bytes,101,opt,name=token,proto3" json:"token,omitempty"`
	BestBuyPrice          float32 `protobuf:"fixed32,102,opt,name=best_buy_price,json=bestBuyPrice,proto3" json:"best_buy_price,omitempty"`
	BestBuyQuantity       int64   `protobuf:"varint,103,opt,name=best_buy_quantity,json=bestBuyQuantity,proto3" json:"best_buy_quantity,omitempty"`
	BestSellPrice         float32 `protobuf:"fixed32,104,opt,name=best_sell_price,json=bestSellPrice,proto3" json:"best_sell_price,omitempty"`
	BestSellQuantity      int64   `protobuf:"varint,105,opt,name=best_sell_quantity,json=bestSellQuantity,proto3" json:"best_sell_quantity,omitempty"`
	Ltp                   float32 `protobuf:"fixed32,106,opt,name=ltp,proto3" json:"ltp,omitempty"`
	PriceHigh             float32 `protobuf:"fixed32,107,opt,name=price_high,json=priceHigh,proto3" json:"price_high,omitempty"`
	PriceLow              float32 `protobuf:"fixed32,108,opt,name=price_low,json=priceLow,proto3" json:"price_low,omitempty"`
	PriceAvgTrade         float32 `protobuf:"fixed32,109,opt,name=price_avg_trade,json=priceAvgTrade,proto3" json:"price_avg_trade,omitempty"`
	PriceClose            float32 `protobuf:"fixed32,110,opt,name=price_close,json=priceClose,proto3" json:"price_close,omitempty"`
	PriceOpen             float32 `protobuf:"fixed32,111,opt,name=price_open,json=priceOpen,proto3" json:"price_open,omitempty"`
	PriceNetChangePercent float32 `protobuf:"fixed32,112,opt,name=price_net_change_percent,json=priceNetChangePercent,proto3" json:"price_net_change_percent,omitempty"`
	SellQuantity          int64   `protobuf:"varint,113,opt,name=sell_quantity,json=sellQuantity,proto3" json:"sell_quantity,omitempty"`
	BuyQuantity           int64   `protobuf:"varint,114,opt,name=buy_quantity,json=buyQuantity,proto3" json:"buy_quantity,omitempty"`
	TradeQuantity         int64   `protobuf:"varint,115,opt,name=trade_quantity,json=tradeQuantity,proto3" json:"trade_quantity,omitempty"`
	OpenInterest          int64   `protobuf:"varint,116,opt,name=open_interest,json=openInterest,proto3" json:"open_interest,omitempty"`
	TotalTradeValue       float32 `protobuf:"fixed32,117,opt,name=total_trade_value,json=totalTradeValue,proto3" json:"total_trade_value,omitempty"`
	LastTradeQuantity     int64   `protobuf:"varint,118,opt,name=last_trade_quantity,json=lastTradeQuantity,proto3" json:"last_trade_quantity,omitempty"`
	LastTradeTime         string  `protobuf:"bytes,119,opt,name=last_trade_time,json=lastTradeTime,proto3" json:"last_trade_time,omitempty"`
	NetChange             float32 `protobuf:"fixed32,120,opt,name=net_change,json=netChange,proto3" json:"net_change,omitempty"`
}

func (x *TickData) Reset() {
	*x = TickData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_collector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickData) ProtoMessage() {}

func (x *TickData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_collector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickData.ProtoReflect.Descriptor instead.
func (*TickData) Descriptor() ([]byte, []int) {
	return file_proto_data_collector_proto_rawDescGZIP(), []int{2}
}

func (x *TickData) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *TickData) GetStrikePrice() int32 {
	if x != nil {
		return x.StrikePrice
	}
	return 0
}

func (x *TickData) GetIsCallOption() bool {
	if x != nil {
		return x.IsCallOption
	}
	return false
}

func (x *TickData) GetIgnore() string {
	if x != nil {
		return x.Ignore
	}
	return ""
}

func (x *TickData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TickData) GetBestBuyPrice() float32 {
	if x != nil {
		return x.BestBuyPrice
	}
	return 0
}

func (x *TickData) GetBestBuyQuantity() int64 {
	if x != nil {
		return x.BestBuyQuantity
	}
	return 0
}

func (x *TickData) GetBestSellPrice() float32 {
	if x != nil {
		return x.BestSellPrice
	}
	return 0
}

func (x *TickData) GetBestSellQuantity() int64 {
	if x != nil {
		return x.BestSellQuantity
	}
	return 0
}

func (x *TickData) GetLtp() float32 {
	if x != nil {
		return x.Ltp
	}
	return 0
}

func (x *TickData) GetPriceHigh() float32 {
	if x != nil {
		return x.PriceHigh
	}
	return 0
}

func (x *TickData) GetPriceLow() float32 {
	if x != nil {
		return x.PriceLow
	}
	return 0
}

func (x *TickData) GetPriceAvgTrade() float32 {
	if x != nil {
		return x.PriceAvgTrade
	}
	return 0
}

func (x *TickData) GetPriceClose() float32 {
	if x != nil {
		return x.PriceClose
	}
	return 0
}

func (x *TickData) GetPriceOpen() float32 {
	if x != nil {
		return x.PriceOpen
	}
	return 0
}

func (x *TickData) GetPriceNetChangePercent() float32 {
	if x != nil {
		return x.PriceNetChangePercent
	}
	return 0
}

func (x *TickData) GetSellQuantity() int64 {
	if x != nil {
		return x.SellQuantity
	}
	return 0
}

func (x *TickData) GetBuyQuantity() int64 {
	if x != nil {
		return x.BuyQuantity
	}
	return 0
}

func (x *TickData) GetTradeQuantity() int64 {
	if x != nil {
		return x.TradeQuantity
	}
	return 0
}

func (x *TickData) GetOpenInterest() int64 {
	if x != nil {
		return x.OpenInterest
	}
	return 0
}

func (x *TickData) GetTotalTradeValue() float32 {
	if x != nil {
		return x.TotalTradeValue
	}
	return 0
}

func (x *TickData) GetLastTradeQuantity() int64 {
	if x != nil {
		return x.LastTradeQuantity
	}
	return 0
}

func (x *TickData) GetLastTradeTime() string {
	if x != nil {
		return x.LastTradeTime
	}
	return ""
}

func (x *TickData) GetNetChange() float32 {
	if x != nil {
		return x.NetChange
	}
	return 0
}

type TickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TickResponse) Reset() {
	*x = TickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_data_collector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickResponse) ProtoMessage() {}

func (x *TickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_data_collector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickResponse.ProtoReflect.Descriptor instead.
func (*TickResponse) Descriptor() ([]byte, []int) {
	return file_proto_data_collector_proto_rawDescGZIP(), []int{3}
}

var File_proto_data_collector_proto protoreflect.FileDescriptor

var file_proto_data_collector_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x22, 0x0a, 0x0c,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x29, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xef, 0x06, 0x0a, 0x08,
	0x54, 0x69, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6b, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x75, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x62, 0x65, 0x73, 0x74, 0x42, 0x75, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x75,
	0x79, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x62, 0x65, 0x73, 0x74, 0x42, 0x75, 0x79, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x62, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x65, 0x73,
	0x74, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x65, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x74, 0x70, 0x18, 0x6a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x74, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x67, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x6c, 0x6f, 0x77, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x76, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x41, 0x76, 0x67, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x6e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x37, 0x0a,
	0x18, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x70, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x15, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x71, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x65, 0x6c, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x75, 0x79, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x72, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x73, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x64, 0x65, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x74, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x75, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x76, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x78, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x0e, 0x0a,
	0x0c, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa0, 0x01,
	0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x12, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x04, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x1b, 0x5a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_data_collector_proto_rawDescOnce sync.Once
	file_proto_data_collector_proto_rawDescData = file_proto_data_collector_proto_rawDesc
)

func file_proto_data_collector_proto_rawDescGZIP() []byte {
	file_proto_data_collector_proto_rawDescOnce.Do(func() {
		file_proto_data_collector_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_data_collector_proto_rawDescData)
	})
	return file_proto_data_collector_proto_rawDescData
}

var file_proto_data_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_data_collector_proto_goTypes = []interface{}{
	(*HelloRequest)(nil),  // 0: data_collector.HelloRequest
	(*HelloResponse)(nil), // 1: data_collector.HelloResponse
	(*TickData)(nil),      // 2: data_collector.TickData
	(*TickResponse)(nil),  // 3: data_collector.TickResponse
}
var file_proto_data_collector_proto_depIdxs = []int32{
	0, // 0: data_collector.DataCollectionService.SayHello:input_type -> data_collector.HelloRequest
	2, // 1: data_collector.DataCollectionService.Tick:input_type -> data_collector.TickData
	1, // 2: data_collector.DataCollectionService.SayHello:output_type -> data_collector.HelloResponse
	3, // 3: data_collector.DataCollectionService.Tick:output_type -> data_collector.TickResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_data_collector_proto_init() }
func file_proto_data_collector_proto_init() {
	if File_proto_data_collector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_data_collector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_collector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_collector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_data_collector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_data_collector_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_data_collector_proto_goTypes,
		DependencyIndexes: file_proto_data_collector_proto_depIdxs,
		MessageInfos:      file_proto_data_collector_proto_msgTypes,
	}.Build()
	File_proto_data_collector_proto = out.File
	file_proto_data_collector_proto_rawDesc = nil
	file_proto_data_collector_proto_goTypes = nil
	file_proto_data_collector_proto_depIdxs = nil
}
